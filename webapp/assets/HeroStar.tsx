// If size isn't passed, defaults to the size of how the stars looks on the largest desktop screen.

interface Star {
  size?: {
    height: number;
    width: number;
  };
}

const HeroStar = ({size} : Star) => (
  <svg xmlns="http://www.w3.org/2000/svg" 
  width={`${!size ? "307" : size.width}`}
  height={`${!size ? "332" : size.height}`}
  fill="none" viewBox="0 0 307 332">
    <path
      fill="#fff"
      d="m305.406 26.47.822.822c-28.376 28.376-52.393 57.842-67.629 82.903l-.277.277a47.776 47.776 0 0 0-.007 49.651l.268.268c14.995 25.377 38.813 55.008 67.458 83.03l-1.168 1.168c-28.359-28.359-57.826-52.359-82.892-67.596l-.233-.234a48.377 48.377 0 0 0-49.764.051l-.277.277C146.326 192.089 30.357 302.61 2.292 331.228l-1.366-1.366c28.367-28.368 138.888-144.354 154.141-169.416l.277-.276a49.027 49.027 0 0 0 6.755-24.827 48.992 48.992 0 0 0-6.748-24.824l-.276-.277C140.088 84.874 90.134 29.469 61.523 1.412L62.7.236C91.068 28.604 146.67 78.359 171.676 93.64l.277.277a47.773 47.773 0 0 0 24.846 6.929 47.795 47.795 0 0 0 24.831-6.997l.268-.268c25.382-15.003 54.838-39.028 82.903-67.63l.605.52Z"
    />
  </svg>
);
export default HeroStar;
